// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  username  String   @unique
  password  String
  profileImage String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  refreshTokens RefreshToken[]
  tweets        Tweet[]
  mediaFiles    MediaFile[]
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique

  user      User     @relation(fields: [userId], references: [id])
  userId    Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tweet {
  id        Int      @id @default(autoincrement())
  text      String

  author      User     @relation(fields: [authorId], references: [id])
  authorId    Int
  replyTo Tweet? @relation("replies", fields: [replyToId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  replyToId Int?
  replies   Tweet[] @relation("replies")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  mediaFiles MediaFile[]
}

model MediaFile {
  id               Int      @id @default(autoincrement())
  url              String
  providerPublicId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // User
  user   User   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  userId Int

  // Tweets
  tweet   Tweet?  @relation(fields: [tweetId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tweetId Int?
}
  